/* AnalizadorSintacticoTiny.java */
/* Generated By:JavaCC: Do not edit this line. AnalizadorSintacticoTiny.java */
package asint;

import programa.Programa.Prog;
import programa.Programa.Dec;
import programa.Programa.Inst;
import programa.Programa.Case;
import programa.Programa.CampoReg;
import programa.Programa.TDefinido;
import programa.Programa.FParam;
import programa.Programa.Exp;


import asint.ASTOps.Lista;

class CabezaProcAs {
   public String proc;
   public Lista<FParam> fparams;
   public CabezaProcAs(String proc, Lista<FParam> fparams) {
      this.proc = proc;
      this.fparams = fparams;
   }
}

public class AnalizadorSintacticoTiny implements AnalizadorSintacticoTinyConstants {
   private ASTOps ops;
   public void setOps(ASTOps ops) {
     this.ops = ops;
   }
   String enlaceFuente(Token token) {
    return "fila "+token.beginLine+" columna "+token.beginColumn;
   }

  final public void inicio() throws ParseException {
    programa();
    jj_consume_token(0);
  }

  final public Prog programa() throws ParseException {Lista<Dec> dec; Inst ins;
    dec = declaraciones();
    ins = instruccion();
{if ("" != null) return ops.prog(dec,ins);}
    throw new Error("Missing return statement in function");
  }

  final public Lista<Dec> declaraciones() throws ParseException {Lista<Dec> decs;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case TYPE:
    case VAR:
    case PROC:{
      decs = listaDeclaraciones();
{if ("" != null) return decs;}
      break;
      }
    default:
      jj_la1[0] = jj_gen;
{if ("" != null) return ops.nodecs();}
    }
    throw new Error("Missing return statement in function");
  }

  final public Lista<Dec> listaDeclaraciones() throws ParseException {Dec dec; Lista<Dec> decs;
    dec = declaracion();
    decs = rListaDeclaraciones(ops.decs(ops.nodecs(),dec));
{if ("" != null) return decs;}
    throw new Error("Missing return statement in function");
  }

  final public Lista<Dec> rListaDeclaraciones(Lista<Dec> decsh) throws ParseException {Dec dec; Lista<Dec> decs;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case TYPE:
    case VAR:
    case PROC:{
      dec = declaracion();
      decs = rListaDeclaraciones(ops.decs(decsh,dec));
{if ("" != null) return decs;}
      break;
      }
    default:
      jj_la1[1] = jj_gen;
{if ("" != null) return decsh;}
    }
    throw new Error("Missing return statement in function");
  }

  final public Dec declaracion() throws ParseException {TDefinido tipo;  Token id; Token proc;
      CabezaProcAs cabezaProc$as; Inst ins;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case TYPE:{
      jj_consume_token(TYPE);
      tipo = tipo0();
      id = jj_consume_token(identificador);
      jj_consume_token(41);
{if ("" != null) return ops.dectipo(tipo,id.image,enlaceFuente(id));}
      break;
      }
    case VAR:{
      jj_consume_token(VAR);
      tipo = tipo0();
      id = jj_consume_token(identificador);
      jj_consume_token(41);
{if ("" != null) return ops.decvar(tipo,id.image,enlaceFuente(id));}
      break;
      }
    case PROC:{
      proc = jj_consume_token(PROC);
      cabezaProc$as = cabezaProc();
      ins = bloque();
      pyComa();
{if ("" != null) return ops.decProc(cabezaProc$as.proc, cabezaProc$as.fparams, ins,
                              enlaceFuente(proc));}
      break;
      }
    default:
      jj_la1[2] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public CabezaProcAs cabezaProc() throws ParseException {Lista<FParam> fparams; Token id;
    id = jj_consume_token(identificador);
    jj_consume_token(42);
    fparams = parametrosFormales();
    jj_consume_token(43);
{if ("" != null) return new CabezaProcAs(id.image,fparams);}
    throw new Error("Missing return statement in function");
  }

  final public Lista<FParam> parametrosFormales() throws ParseException {Lista<FParam> fparams;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case INT:
    case BOOL:
    case STRUCT:
    case CHAR:
    case FLOAT:
    case STRING:
    case identificador:{
      fparams = listaParametrosFormales();
{if ("" != null) return fparams;}
      break;
      }
    default:
      jj_la1[3] = jj_gen;
{if ("" != null) return ops.nofparams();}
    }
    throw new Error("Missing return statement in function");
  }

  final public Lista<FParam> listaParametrosFormales() throws ParseException {FParam fparam;
      Lista<FParam> fparams;
    fparam = parametroFormal();
    fparams = rListaParametrosFormales(ops.fparams(ops.nofparams(),fparam));
{if ("" != null) return fparams;}
    throw new Error("Missing return statement in function");
  }

  final public Lista<FParam> rListaParametrosFormales(Lista<FParam> fparamsh) throws ParseException {FParam fparam;
      Lista<FParam> fparams;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 44:{
      jj_consume_token(44);
      fparam = parametroFormal();
      fparams = rListaParametrosFormales(ops.fparams(fparamsh,fparam));
{if ("" != null) return fparams;}
      break;
      }
    default:
      jj_la1[4] = jj_gen;
{if ("" != null) return fparamsh;}
    }
    throw new Error("Missing return statement in function");
  }

  final public FParam parametroFormal() throws ParseException {TDefinido tipo; boolean porRef; Token id;
    tipo = tipo0();
    porRef = modo();
    id = jj_consume_token(identificador);
{if ("" != null) return ops.fparam(tipo,porRef,id.image,enlaceFuente(id));}
    throw new Error("Missing return statement in function");
  }

  final public boolean modo() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 45:{
      jj_consume_token(45);
{if ("" != null) return true;}
      break;
      }
    default:
      jj_la1[5] = jj_gen;
{if ("" != null) return false;}
    }
    throw new Error("Missing return statement in function");
  }

  final public TDefinido tipo0() throws ParseException {TDefinido tipo$tipo1;
     TDefinido tipo$rTipo0;
    tipo$tipo1 = tipo1();
    tipo$rTipo0 = rTipo0(tipo$tipo1);
{if ("" != null) return tipo$rTipo0;}
    throw new Error("Missing return statement in function");
  }

  final public TDefinido rTipo0(TDefinido tipoh) throws ParseException {TDefinido tipo; Token dimension;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 46:{
      jj_consume_token(46);
      tipo = rTipo0Pointer(ops.tipoPointer(tipoh));
{if ("" != null) return tipo;}
      break;
      }
    case 47:{
      jj_consume_token(47);
      dimension = jj_consume_token(numeroEntero);
      jj_consume_token(48);
{if ("" != null) return ops.tipoArray(Integer.parseInt(dimension.image), tipoh);}
      break;
      }
    default:
      jj_la1[6] = jj_gen;
{if ("" != null) return tipoh;}
    }
    throw new Error("Missing return statement in function");
  }

  final public TDefinido rTipo0Pointer(TDefinido tipoh) throws ParseException {TDefinido tipo;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 46:{
      jj_consume_token(46);
      tipo = rTipo0Pointer(ops.tipoPointer(tipoh));
{if ("" != null) return tipo;}
      break;
      }
    default:
      jj_la1[7] = jj_gen;
{if ("" != null) return tipoh;}
    }
    throw new Error("Missing return statement in function");
  }

  final public TDefinido tipo1() throws ParseException {Token id;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case INT:{
      jj_consume_token(INT);
{if ("" != null) return ops.tipoInt();}
      break;
      }
    case BOOL:{
      jj_consume_token(BOOL);
{if ("" != null) return ops.tipoBool();}
      break;
      }
    case CHAR:{
      jj_consume_token(CHAR);
{if ("" != null) return ops.tipoChar();}
      break;
      }
    case FLOAT:{
      jj_consume_token(FLOAT);
{if ("" != null) return ops.tipoReal();}
      break;
      }
    case STRING:{
      jj_consume_token(STRING);
{if ("" != null) return ops.tipoString();}
      break;
      }
    case STRUCT:{
      id = jj_consume_token(STRUCT);
{if ("" != null) return tstruct(id);}
      break;
      }
    case identificador:{
      id = jj_consume_token(identificador);
{if ("" != null) return ops.tipoRef(id.image,enlaceFuente(id));}
      break;
      }
    default:
      jj_la1[8] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public TDefinido tstruct(Token id) throws ParseException {Lista<CampoReg> fields;
    jj_consume_token(49);
    fields = listaCampos();
    jj_consume_token(50);
    pyComa();
{if ("" != null) return ops.tipoRegistro(fields, enlaceFuente(id));}
    throw new Error("Missing return statement in function");
  }

  final public Lista<CampoReg> listaCampos() throws ParseException {CampoReg rcampo; Lista<CampoReg> rcampos;
    rcampo = campoReg();
    jj_consume_token(41);
    rcampos = rListaCampos(ops.rcampos(ops.norcampos(),rcampo));
{if ("" != null) return rcampos;}
    throw new Error("Missing return statement in function");
  }

  final public Lista<CampoReg> rListaCampos(Lista<CampoReg> rcamposh) throws ParseException {CampoReg rcampo; Lista<CampoReg> rcampos;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case INT:
    case BOOL:
    case STRUCT:
    case CHAR:
    case FLOAT:
    case STRING:
    case identificador:{
      rcampo = campoReg();
      jj_consume_token(41);
      rcampos = rListaCampos(ops.rcampos(rcamposh,rcampo));
{if ("" != null) return rcampos;}
      break;
      }
    default:
      jj_la1[9] = jj_gen;
{if ("" != null) return rcamposh;}
    }
    throw new Error("Missing return statement in function");
  }

  final public CampoReg campoReg() throws ParseException {TDefinido tipo; Token id;
    tipo = tipo0();
    id = jj_consume_token(identificador);
{if ("" != null) return ops.campoRegistro(id.image, tipo);}
    throw new Error("Missing return statement in function");
  }

  final public Inst instruccion() throws ParseException {Inst ins;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case TRUE:
    case FALSE:
    case NULL:
    case identificador:
    case numeroEntero:
    case numeroReal:
    case CTECHAR:
    case CTESTRING:
    case 42:
    case 46:
    case 56:
    case 61:
    case 65:{
      ins = iasig();
{if ("" != null) return ins;}
      break;
      }
    case 49:{
      ins = ibloque();
{if ("" != null) return ins;}
      break;
      }
    case WHILE:{
      ins = iwhile();
{if ("" != null) return ins;}
      break;
      }
    case CALL:{
      ins = icall();
{if ("" != null) return ins;}
      break;
      }
    case NEW:{
      ins = inew();
{if ("" != null) return ins;}
      break;
      }
    case DELETE:{
      ins = idelete();
{if ("" != null) return ins;}
      break;
      }
    case SWITCH:{
      ins = iswitch();
{if ("" != null) return ins;}
      break;
      }
    case DO:{
      ins = idowhile();
{if ("" != null) return ins;}
      break;
      }
    case IF:{
      ins = iif();
{if ("" != null) return ins;}
      break;
      }
    case READ:{
      ins = iread();
{if ("" != null) return ins;}
      break;
      }
    case WRITE:{
      ins = iwrite();
{if ("" != null) return ins;}
      break;
      }
    default:
      jj_la1[10] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public Inst iread() throws ParseException {Token readToken; Exp exp;
    readToken = jj_consume_token(READ);
    exp = exp0();
    jj_consume_token(41);
{if ("" != null) return ops.iread(exp, enlaceFuente(readToken));}
    throw new Error("Missing return statement in function");
  }

  final public Inst iwrite() throws ParseException {Token writeToken; Exp exp;
    writeToken = jj_consume_token(WRITE);
    exp = exp0();
    jj_consume_token(41);
{if ("" != null) return ops.iescribe(exp, enlaceFuente(writeToken));}
    throw new Error("Missing return statement in function");
  }

  final public Inst iasig() throws ParseException {Exp el,er; Token asig;
    el = exp0();
    asig = jj_consume_token(51);
    er = exp0();
    jj_consume_token(41);
{if ("" != null) return ops.iasig(el,er,enlaceFuente(asig));}
    throw new Error("Missing return statement in function");
  }

  final public Inst ibloque() throws ParseException {Inst ins;
    ins = bloque();
    pyComa();
{if ("" != null) return ins;}
    throw new Error("Missing return statement in function");
  }

  final public Inst iwhile() throws ParseException {Exp exp; Inst i; Token While;
    While = jj_consume_token(WHILE);
    exp = exp0();
    i = bloque();
    pyComa();
{if ("" != null) return ops.iwhile(exp,i,enlaceFuente(While));}
    throw new Error("Missing return statement in function");
  }

  final public Inst idowhile() throws ParseException {Exp exp; Inst i; Token Do; Token While;
    Do = jj_consume_token(DO);
    i = bloque();
    While = jj_consume_token(WHILE);
    exp = exp0();
    pyComa();
{if ("" != null) return ops.idowhile(exp,i,enlaceFuente(Do));}
    throw new Error("Missing return statement in function");
  }

  final public Inst iif() throws ParseException {Exp exp; Inst i; Token ifToken; Token then; Inst rif;
    ifToken = jj_consume_token(IF);
    exp = exp0();
    then = jj_consume_token(THEN);
    i = bloque();
    rif = iifelse(exp, i, ifToken);
{if ("" != null) return rif;}
    throw new Error("Missing return statement in function");
  }

  final public Inst iifelse(Exp exp0, Inst bloque0, Token ifToken) throws ParseException {Inst bloque1; Token elseToken;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case ELSE:{
      elseToken = jj_consume_token(ELSE);
      bloque1 = bloque();
{if ("" != null) return ops.iifelse(exp0, bloque0, bloque1, enlaceFuente(elseToken));}
      break;
      }
    default:
      jj_la1[11] = jj_gen;
{if ("" != null) return ops.iif(exp0, bloque0, enlaceFuente(ifToken));}
    }
    throw new Error("Missing return statement in function");
  }

  final public Inst iswitch() throws ParseException {Exp exp; Lista<Case> cases; Token SwitchToken; Inst defaultCase;
    SwitchToken = jj_consume_token(SWITCH);
    exp = exp0();
    jj_consume_token(49);
    cases = casos();
    defaultCase = caseDefault();
    jj_consume_token(50);
{if ("" != null) return ops.iswitch(exp, cases, defaultCase, enlaceFuente(SwitchToken));}
    throw new Error("Missing return statement in function");
  }

  final public Inst caseDefault() throws ParseException {Token DefaultToken; Inst i;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case DEFAULTtoken:{
      DefaultToken = jj_consume_token(DEFAULTtoken);
      jj_consume_token(52);
      i = instruccion();
{if ("" != null) return i;}
      break;
      }
    default:
      jj_la1[12] = jj_gen;
{if ("" != null) return null;}
    }
    throw new Error("Missing return statement in function");
  }

  final public Lista<Case> casos() throws ParseException {Lista<Case> rcases;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case CASE:{
      rcases = listaCasos();
{if ("" != null) return rcases;}
      break;
      }
    default:
      jj_la1[13] = jj_gen;
{if ("" != null) return ops.norcases();}
    }
    throw new Error("Missing return statement in function");
  }

  final public Lista<Case> listaCasos() throws ParseException {Case rcase; Lista<Case> rcases;
    jj_consume_token(CASE);
    rcase = caso();
    rcases = rListaCasos(ops.rcases(ops.norcases(),rcase));
{if ("" != null) return rcases;}
    throw new Error("Missing return statement in function");
  }

  final public Lista<Case> rListaCasos(Lista<Case> rcasesh) throws ParseException {Case rcase; Lista<Case> rcases;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case CASE:{
      jj_consume_token(CASE);
      rcase = caso();
      rcases = rListaCasos(ops.rcases(rcasesh,rcase));
{if ("" != null) return rcases;}
      break;
      }
    default:
      jj_la1[14] = jj_gen;
{if ("" != null) return rcasesh;}
    }
    throw new Error("Missing return statement in function");
  }

  final public Case caso() throws ParseException {Exp exp; Inst i;
    exp = constante();
    jj_consume_token(52);
    i = instruccion();
{if ("" != null) return ops.icase(exp, i);}
    throw new Error("Missing return statement in function");
  }

  final public Inst icall() throws ParseException {Token id;  Lista<Exp> rparams;
    jj_consume_token(CALL);
    id = jj_consume_token(identificador);
    rparams = parametrosReales();
    jj_consume_token(41);
{if ("" != null) return ops.icall(id.image,rparams,enlaceFuente(id));}
    throw new Error("Missing return statement in function");
  }

  final public Lista<Exp> parametrosReales() throws ParseException {Lista<Exp> rparams;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case WITH:{
      jj_consume_token(WITH);
      rparams = listaParametrosReales();
{if ("" != null) return rparams;}
      break;
      }
    default:
      jj_la1[15] = jj_gen;
{if ("" != null) return ops.norparams();}
    }
    throw new Error("Missing return statement in function");
  }

  final public Lista<Exp> listaParametrosReales() throws ParseException {Exp rparam; Lista<Exp> rparams;
    rparam = exp0();
    rparams = rListaParametrosReales(ops.rparams(ops.norparams(),rparam));
{if ("" != null) return rparams;}
    throw new Error("Missing return statement in function");
  }

  final public Lista<Exp> rListaParametrosReales(Lista<Exp> rparamsh) throws ParseException {Exp rparam; Lista<Exp> rparams;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 44:{
      jj_consume_token(44);
      rparam = exp0();
      rparams = rListaParametrosReales(ops.rparams(rparamsh,rparam));
{if ("" != null) return rparams;}
      break;
      }
    default:
      jj_la1[16] = jj_gen;
{if ("" != null) return rparamsh;}
    }
    throw new Error("Missing return statement in function");
  }

  final public Inst inew() throws ParseException {Token cnew; Exp desig;
    cnew = jj_consume_token(NEW);
    desig = exp0();
    jj_consume_token(41);
{if ("" != null) return ops.inew(desig,enlaceFuente(cnew));}
    throw new Error("Missing return statement in function");
  }

  final public Inst idelete() throws ParseException {Token cdelete; Exp desig;
    cdelete = jj_consume_token(DELETE);
    desig = exp0();
    jj_consume_token(41);
{if ("" != null) return ops.idelete(desig,enlaceFuente(cdelete));}
    throw new Error("Missing return statement in function");
  }

  final public Inst bloque() throws ParseException {Lista<Dec> decs; Lista<Inst> is;
    jj_consume_token(49);
    decs = declaraciones();
    is = instrucciones();
    jj_consume_token(50);
{if ("" != null) return ops.ibloque(decs,is);}
    throw new Error("Missing return statement in function");
  }

  final public Lista<Inst> instrucciones() throws ParseException {Lista<Inst> insts;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case TRUE:
    case FALSE:
    case WHILE:
    case DO:
    case CALL:
    case NEW:
    case DELETE:
    case NULL:
    case READ:
    case WRITE:
    case SWITCH:
    case IF:
    case identificador:
    case numeroEntero:
    case numeroReal:
    case CTECHAR:
    case CTESTRING:
    case 42:
    case 46:
    case 49:
    case 56:
    case 61:
    case 65:{
      insts = listaInstrucciones();
{if ("" != null) return insts;}
      break;
      }
    default:
      jj_la1[17] = jj_gen;
{if ("" != null) return ops.noInsts();}
    }
    throw new Error("Missing return statement in function");
  }

  final public Lista<Inst> listaInstrucciones() throws ParseException {Inst ins; Lista<Inst> insts;
    ins = instruccion();
    insts = rListaInstrucciones(ops.insts(ops.noInsts(),ins));
{if ("" != null) return insts;}
    throw new Error("Missing return statement in function");
  }

  final public Lista<Inst> rListaInstrucciones(Lista<Inst> instsh) throws ParseException {Inst ins; Lista<Inst> insts;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case TRUE:
    case FALSE:
    case WHILE:
    case DO:
    case CALL:
    case NEW:
    case DELETE:
    case NULL:
    case READ:
    case WRITE:
    case SWITCH:
    case IF:
    case identificador:
    case numeroEntero:
    case numeroReal:
    case CTECHAR:
    case CTESTRING:
    case 42:
    case 46:
    case 49:
    case 56:
    case 61:
    case 65:{
      ins = instruccion();
      insts = rListaInstrucciones(ops.insts(instsh,ins));
{if ("" != null) return insts;}
      break;
      }
    default:
      jj_la1[18] = jj_gen;
{if ("" != null) return instsh;}
    }
    throw new Error("Missing return statement in function");
  }

  final public void pyComa() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 41:{
      jj_consume_token(41);
      break;
      }
    default:
      jj_la1[19] = jj_gen;

    }
  }

  final public Exp exp0() throws ParseException {Exp exp1; Exp exp0;
    exp1 = exp1();
    exp0 = rexp0(exp1);
{if ("" != null) return exp0;}
    throw new Error("Missing return statement in function");
  }

  final public Exp rexp0(Exp exph) throws ParseException {Token opToken; Exp exp1;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:{
      opToken = operadorRelNoAsoc();
      exp1 = exp1();
{if ("" != null) return ops.opBin(opToken.image, exph, exp1, enlaceFuente(opToken));}
      break;
      }
    default:
      jj_la1[20] = jj_gen;
{if ("" != null) return exph;}
    }
    throw new Error("Missing return statement in function");
  }

  final public Token operadorRelNoAsoc() throws ParseException {Token t;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 53:{
      t = jj_consume_token(53);
{if ("" != null) return t;}
      break;
      }
    case 54:{
      t = jj_consume_token(54);
{if ("" != null) return t;}
      break;
      }
    case 55:{
      t = jj_consume_token(55);
{if ("" != null) return t;}
      break;
      }
    case 56:{
      t = jj_consume_token(56);
{if ("" != null) return t;}
      break;
      }
    case 57:{
      t = jj_consume_token(57);
{if ("" != null) return t;}
      break;
      }
    case 58:{
      t = jj_consume_token(58);
{if ("" != null) return t;}
      break;
      }
    default:
      jj_la1[21] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public Exp exp1() throws ParseException {Exp exp2, rrexp1;
    exp2 = exp2();
    rrexp1 = rrexp1(exp2);
{if ("" != null) return rrexp1;}
    throw new Error("Missing return statement in function");
  }

  final public Exp rrexp1(Exp exph) throws ParseException {Token opToken; Exp exp;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 59:{
      opToken = jj_consume_token(59);
      exp = exp2();
{if ("" != null) return ops.or(exph, exp, enlaceFuente(opToken));}
      break;
      }
    default:
      jj_la1[22] = jj_gen;
      exp = rexp1(exph);
{if ("" != null) return exp;}
    }
    throw new Error("Missing return statement in function");
  }

  final public Exp rexp1(Exp exph) throws ParseException {Token op; Exp exp$exp2, exp$rexp1;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 60:
    case 61:{
      op = opAditivo();
      exp$exp2 = exp2();
      exp$rexp1 = rexp1(ops.opBin(op.image,exph,exp$exp2,enlaceFuente(op)));
{if ("" != null) return exp$rexp1;}
      break;
      }
    default:
      jj_la1[23] = jj_gen;
{if ("" != null) return exph;}
    }
    throw new Error("Missing return statement in function");
  }

  final public Token opAditivo() throws ParseException {Token t;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 60:{
      t = jj_consume_token(60);
{if ("" != null) return t;}
      break;
      }
    case 61:{
      t = jj_consume_token(61);
{if ("" != null) return t;}
      break;
      }
    default:
      jj_la1[24] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public Exp exp2() throws ParseException {Exp exp3, rexp2, rrexp2;
    exp3 = exp3();
    rexp2 = rexp2(exp3);
    rrexp2 = rrexp2(rexp2);
{if ("" != null) return rrexp2;}
    throw new Error("Missing return statement in function");
  }

  final public Exp rexp2(Exp exph) throws ParseException {Exp exp; Token t;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 62:{
      t = jj_consume_token(62);
      exp = exp3();
{if ("" != null) return ops.opBin(t.image,exph,exp,enlaceFuente(t));}
      break;
      }
    default:
      jj_la1[25] = jj_gen;
{if ("" != null) return exph;}
    }
    throw new Error("Missing return statement in function");
  }

  final public Exp rrexp2(Exp exph) throws ParseException {Token opToken; Exp exp3; Exp rrexp2;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 46:
    case 63:
    case 64:{
      opToken = opMultiplicativo();
      exp3 = exp3();
      rrexp2 = rrexp2(ops.opBin(opToken.image,exph,exp3,enlaceFuente(opToken)));
{if ("" != null) return rrexp2;}
      break;
      }
    default:
      jj_la1[26] = jj_gen;
{if ("" != null) return exph;}
    }
    throw new Error("Missing return statement in function");
  }

  final public Token opMultiplicativo() throws ParseException {Token t;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 46:{
      t = jj_consume_token(46);
{if ("" != null) return t;}
      break;
      }
    case 63:{
      t = jj_consume_token(63);
{if ("" != null) return t;}
      break;
      }
    case 64:{
      t = jj_consume_token(64);
{if ("" != null) return t;}
      break;
      }
    default:
      jj_la1[27] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public Exp exp3() throws ParseException {Token opToken; Exp exp;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 61:
    case 65:{
      opToken = opUnarioAsoc();
      exp = exp3();
{if ("" != null) return ops.opUn(opToken.image, exp, enlaceFuente(opToken));}
      break;
      }
    case 56:{
      jj_consume_token(56);
      opToken = opUnarioNoAsoc();
      jj_consume_token(58);
      exp = exp4();
{if ("" != null) return ops.opUn(opToken.image, exp, enlaceFuente(opToken));}
      break;
      }
    case TRUE:
    case FALSE:
    case NULL:
    case identificador:
    case numeroEntero:
    case numeroReal:
    case CTECHAR:
    case CTESTRING:
    case 42:
    case 46:{
      exp = exp4();
{if ("" != null) return exp;}
      break;
      }
    default:
      jj_la1[28] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public Token opUnarioNoAsoc() throws ParseException {Token t;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case INT:{
      t = jj_consume_token(INT);
{if ("" != null) return t;}
      break;
      }
    case BOOL:{
      t = jj_consume_token(BOOL);
{if ("" != null) return t;}
      break;
      }
    case CHAR:{
      t = jj_consume_token(CHAR);
{if ("" != null) return t;}
      break;
      }
    case FLOAT:{
      t = jj_consume_token(FLOAT);
{if ("" != null) return t;}
      break;
      }
    default:
      jj_la1[29] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public Token opUnarioAsoc() throws ParseException {Token t;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 65:{
      t = jj_consume_token(65);
{if ("" != null) return t;}
      break;
      }
    case 61:{
      t = jj_consume_token(61);
{if ("" != null) return t;}
      break;
      }
    default:
      jj_la1[30] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public Exp exp4() throws ParseException {Exp exp5; Exp rexp4;
    exp5 = exp5();
    rexp4 = rexp4(exp5);
{if ("" != null) return rexp4;}
    throw new Error("Missing return statement in function");
  }

  final public Exp rexp4(Exp exph) throws ParseException {Exp exp5; Token t;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 66:{
      t = elementocadena();
      exp5 = exp5();
{if ("" != null) return ops.elementocadena(exph, exp5, enlaceFuente(t));}
      break;
      }
    default:
      jj_la1[31] = jj_gen;
{if ("" != null) return exph;}
    }
    throw new Error("Missing return statement in function");
  }

  final public Token elementocadena() throws ParseException {Token t;
    t = jj_consume_token(66);
{if ("" != null) return t;}
    throw new Error("Missing return statement in function");
  }

  final public Exp exp5() throws ParseException {Exp exp6, rexp5;
    exp6 = exp6();
    rexp5 = rexp5(exp6);
{if ("" != null) return rexp5;}
    throw new Error("Missing return statement in function");
  }

  final public Exp rexp5(Exp exph) throws ParseException {Exp exp0, rexp5; Token id,punto, flecha;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 47:{
      jj_consume_token(47);
      exp0 = exp0();
      jj_consume_token(48);
      rexp5 = rexp5(ops.arrayAccess(exph, exp0, "[]"));
{if ("" != null) return rexp5;}
      break;
      }
    case 67:{
      punto = jj_consume_token(67);
      id = jj_consume_token(identificador);
      rexp5 = rexp5(ops.selField(exph, id.image, enlaceFuente(punto)));
{if ("" != null) return rexp5;}
      break;
      }
    case 68:{
      flecha = jj_consume_token(68);
      id = jj_consume_token(identificador);
      rexp5 = rexp5(ops.selField(exph, id.image, enlaceFuente(flecha)));
{if ("" != null) return rexp5;}
      break;
      }
    default:
      jj_la1[32] = jj_gen;
{if ("" != null) return exph;}
    }
    throw new Error("Missing return statement in function");
  }

  final public Token tarray() throws ParseException {Token t;
    t = jj_consume_token(69);
{if ("" != null) return t;}
    throw new Error("Missing return statement in function");
  }

  final public Exp exp6() throws ParseException {Exp exp; Token t;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 46:{
      t = jj_consume_token(46);
      exp = exp6();
{if ("" != null) return ops.opUn(t.image,exp,enlaceFuente(t));}
      break;
      }
    case TRUE:
    case FALSE:
    case NULL:
    case identificador:
    case numeroEntero:
    case numeroReal:
    case CTECHAR:
    case CTESTRING:
    case 42:{
      exp = exp7();
{if ("" != null) return exp;}
      break;
      }
    default:
      jj_la1[33] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public Exp exp7() throws ParseException {Token t; Exp e;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case identificador:{
      t = jj_consume_token(identificador);
{if ("" != null) return ops.var(t.image,enlaceFuente(t));}
      break;
      }
    case TRUE:
    case FALSE:
    case NULL:
    case numeroEntero:
    case numeroReal:
    case CTECHAR:
    case CTESTRING:{
      e = literal();
{if ("" != null) return e;}
      break;
      }
    case 42:{
      jj_consume_token(42);
      e = exp0();
      jj_consume_token(43);
{if ("" != null) return e;}
      break;
      }
    default:
      jj_la1[34] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public Exp literal() throws ParseException {Token t;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case numeroEntero:{
      t = jj_consume_token(numeroEntero);
{if ("" != null) return ops.cteint(Integer.parseInt(t.image));}
      break;
      }
    case TRUE:{
      jj_consume_token(TRUE);
{if ("" != null) return ops.ctebool(true);}
      break;
      }
    case FALSE:{
      jj_consume_token(FALSE);
{if ("" != null) return ops.ctebool(false);}
      break;
      }
    case numeroReal:{
      t = jj_consume_token(numeroReal);
{if ("" != null) return ops.ctereal(Double.parseDouble(t.image));}
      break;
      }
    case CTECHAR:{
      t = jj_consume_token(CTECHAR);
{if ("" != null) return ops.ctechar((t.image).charAt(1));}
      break;
      }
    case CTESTRING:{
      t = jj_consume_token(CTESTRING);
{if ("" != null) return ops.ctestring(t.image.replaceAll("\u005c"$", "").replaceAll("^\u005c"", ""));}
      break;
      }
    case NULL:{
      jj_consume_token(NULL);
{if ("" != null) return ops.ctenull();}
      break;
      }
    default:
      jj_la1[35] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public Exp constante() throws ParseException {Token t;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case numeroEntero:{
      t = jj_consume_token(numeroEntero);
{if ("" != null) return ops.cteint(Integer.parseInt(t.image));}
      break;
      }
    case TRUE:{
      jj_consume_token(TRUE);
{if ("" != null) return ops.ctebool(true);}
      break;
      }
    case FALSE:{
      jj_consume_token(FALSE);
{if ("" != null) return ops.ctebool(false);}
      break;
      }
    case numeroReal:{
      t = jj_consume_token(numeroReal);
{if ("" != null) return ops.ctereal(Double.parseDouble(t.image));}
      break;
      }
    case CTECHAR:{
      t = jj_consume_token(CTECHAR);
{if ("" != null) return ops.ctechar((t.image).charAt(1));}
      break;
      }
    default:
      jj_la1[36] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  /** Generated Token Manager. */
  public AnalizadorSintacticoTinyTokenManager token_source;
  SimpleCharStream jj_input_stream;
  /** Current token. */
  public Token token;
  /** Next token. */
  public Token jj_nt;
  private int jj_ntk;
  private int jj_gen;
  final private int[] jj_la1 = new int[37];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static private int[] jj_la1_2;
  static {
      jj_la1_init_0();
      jj_la1_init_1();
      jj_la1_init_2();
   }
   private static void jj_la1_init_0() {
      jj_la1_0 = new int[] {0x4c00,0x4c00,0x4c00,0x1c100300,0x0,0x0,0x0,0x0,0x1c100300,0x1c100300,0x630eb0c0,0x0,0x800000,0x200000,0x200000,0x10000,0x0,0x630eb0c0,0x630eb0c0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x800c0,0xc000300,0x0,0x0,0x0,0x800c0,0x800c0,0x800c0,0xc0,};
   }
   private static void jj_la1_init_1() {
      jj_la1_1 = new int[] {0x0,0x0,0x0,0x2,0x1000,0x2000,0xc000,0x4000,0x2,0x2,0x210245c6,0x1,0x0,0x0,0x0,0x0,0x1000,0x210245c6,0x210245c6,0x200,0x7e00000,0x7e00000,0x8000000,0x30000000,0x30000000,0x40000000,0x80004000,0x80004000,0x210045c6,0x0,0x20000000,0x0,0x8000,0x45c6,0x5c6,0x1c4,0xc4,};
   }
   private static void jj_la1_init_2() {
      jj_la1_2 = new int[] {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x2,0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x1,0x2,0x0,0x2,0x4,0x18,0x0,0x0,0x0,0x0,};
   }

  /** Constructor with InputStream. */
  public AnalizadorSintacticoTiny(java.io.InputStream stream) {
     this(stream, null);
  }
  /** Constructor with InputStream and supplied encoding */
  public AnalizadorSintacticoTiny(java.io.InputStream stream, String encoding) {
    try { jj_input_stream = new SimpleCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source = new AnalizadorSintacticoTinyTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 37; i++) jj_la1[i] = -1;
  }

  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream) {
     ReInit(stream, null);
  }
  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream, String encoding) {
    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 37; i++) jj_la1[i] = -1;
  }

  /** Constructor. */
  public AnalizadorSintacticoTiny(java.io.Reader stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new AnalizadorSintacticoTinyTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 37; i++) jj_la1[i] = -1;
  }

  /** Reinitialise. */
  public void ReInit(java.io.Reader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 37; i++) jj_la1[i] = -1;
  }

  /** Constructor with generated Token Manager. */
  public AnalizadorSintacticoTiny(AnalizadorSintacticoTinyTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 37; i++) jj_la1[i] = -1;
  }

  /** Reinitialise. */
  public void ReInit(AnalizadorSintacticoTinyTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 37; i++) jj_la1[i] = -1;
  }

  private Token jj_consume_token(int kind) throws ParseException {
    Token oldToken;
    if ((oldToken = token).next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    if (token.kind == kind) {
      jj_gen++;
      return token;
    }
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }


/** Get the next Token. */
  final public Token getNextToken() {
    if (token.next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    jj_gen++;
    return token;
  }

/** Get the specific Token. */
  final public Token getToken(int index) {
    Token t = token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  private int jj_ntk_f() {
    if ((jj_nt=token.next) == null)
      return (jj_ntk = (token.next=token_source.getNextToken()).kind);
    else
      return (jj_ntk = jj_nt.kind);
  }

  private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  private int[] jj_expentry;
  private int jj_kind = -1;

  /** Generate ParseException. */
  public ParseException generateParseException() {
    jj_expentries.clear();
    boolean[] la1tokens = new boolean[70];
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 37; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
          if ((jj_la1_2[i] & (1<<j)) != 0) {
            la1tokens[64+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 70; i++) {
      if (la1tokens[i]) {
        jj_expentry = new int[1];
        jj_expentry[0] = i;
        jj_expentries.add(jj_expentry);
      }
    }
    int[][] exptokseq = new int[jj_expentries.size()][];
    for (int i = 0; i < jj_expentries.size(); i++) {
      exptokseq[i] = jj_expentries.get(i);
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  /** Enable tracing. */
  final public void enable_tracing() {
  }

  /** Disable tracing. */
  final public void disable_tracing() {
  }

}
